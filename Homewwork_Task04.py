# 4. Чисто для тренировки новый функций, ничего сложного.
# Создайте два списка — один с названиями языков программирования,
# другой — с числами от 1 до длины первого плюс 1.
# Вам нужно сделать две функции: первая из которых создаст список кортежей,
# состоящих из номера и языка, написанного большими буквами.
# Вторая — которая отфильтрует этот список следующим образом:
# если сумма очков слова имеет в делителях номер, с которым она в паре в кортеже,
# то кортеж остается, его номер заменяется на сумму очков. Если нет — удаляется.
# Суммой очков называется сложение порядковых номеров букв в слове.
# Порядковые номера смотрите в этой таблице, в третьем столбце: https://www.charset.org/utf-8
# Это — 16-ричная система, поищите, как правильнее и быстрее получать эти символы.
# С помощью reduce сложите получившиеся числа и верните из функции в качестве ответа.
from functools import reduce

prog_lang = ['Java', 'C#', 'Python', 'Ruby', 'Go', 'JavaScript']
num_prog_lang = [i for i in range(1, len(prog_lang) + 1)]
lst_of_tuples = list(zip(num_prog_lang, prog_lang))


def filter_of_tuples(lst_of_tuples):
    temp = []
    for tup in lst_of_tuples:
        summ = 0
        for s in tup[1]:
            summ += ord(s)
        if summ % tup[0] == 0:
            temp.append(summ)
    return reduce(lambda x, y: x + y, temp)


print(filter_of_tuples(lst_of_tuples))